name: Build and Push Docker Images

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  OWNER: latitude-dev

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    with:
      workflow_call: true

  test:
    uses: ./.github/workflows/test.yml
    with:
      workflow_call: true

  build-and-push:
    needs: [lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        # Build all our service images in parallel
        app: [web, gateway, workers, websockets]
        include:
          - app: web
            dockerfile: apps/web/docker/Dockerfile
          - app: gateway
            dockerfile: apps/gateway/docker/Dockerfile
          - app: workers
            dockerfile: apps/workers/docker/Dockerfile
          - app: websockets
            dockerfile: apps/websockets/docker/Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry to enable both pulling cache and pushing images
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate Docker metadata/tags based on Git context
      # - For main branch: latest tag
      # - For all: SHA tag for precise version tracking
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.app }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push the Docker image
      # - Uses layer caching for faster builds
      # - Only pushes on main branch
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.app }}:latest
          cache-to: type=inline

  run-migrations:
    needs: build-and-push
    uses: ./.github/workflows/run-migrations.yml
    with:
      workflow_call: true
    secrets:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DB_PORT: ${{ secrets.DB_PORT }}

  deploy-rest:
    needs: run-migrations
    uses: ./.github/workflows/deploy-rest.yml
    permissions:
      id-token: write
      contents: read
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ARN_OF_IAM_ROLE_TO_ASSUME: ${{ secrets.ARN_OF_IAM_ROLE_TO_ASSUME }}

  deploy-web:
    needs: run-migrations
    uses: ./.github/workflows/deploy-web.yml
    permissions:
      id-token: write
      contents: read
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ARN_OF_IAM_ROLE_TO_ASSUME: ${{ secrets.ARN_OF_IAM_ROLE_TO_ASSUME }}

  deploy-gateway:
    needs: run-migrations
    uses: ./.github/workflows/deploy-gateway.yml
    permissions:
      id-token: write
      contents: read
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ARN_OF_IAM_ROLE_TO_ASSUME: ${{ secrets.ARN_OF_IAM_ROLE_TO_ASSUME }}

# Concurrency settings to manage multiple workflow runs
# - Groups runs by workflow name and git ref
# - For main branch: Never cancel running builds (queue them instead)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
